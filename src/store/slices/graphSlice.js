import { createSlice } from "@reduxjs/toolkit";
import { getGraphData } from "../actions";

// Initial state for the graph data slice
const initialState = {
  data: [], // Array to store graph data
  isLoading: false, // Flag to indicate loading state
  isSuccess: false, // Flag to indicate success state
  errorMessage: "", // Error message in case of failure
};

// Create a Redux slice for managing graph data
export const graphSlice = createSlice({
  name: "graph", // Slice name
  initialState, // Initial state defined above
  extraReducers: {
    // Handle pending action (data is being fetched)
    [getGraphData.pending]: (state) => {
      state.isLoading = true; // Set loading flag to true
    },
    // Handle fulfilled action (data fetching is successful)
    [getGraphData.fulfilled]: (state, { payload }) => {
      state.isLoading = false; // Set loading flag to false
      state.isSuccess = true; // Set success flag to true
      state.data = payload; // Update graph data in the state
    },
    // Handle rejected action (data fetching has failed)
    [getGraphData.rejected]: (state, { payload }) => {
      state.isLoading = false; // Set loading flag to false
      state.isSuccess = false; // Set success flag to false
      state.errorMessage = payload; // Update error message in the state
    },
  },
});

// Export the reducer function generated by createSlice
export default graphSlice.reducer;
